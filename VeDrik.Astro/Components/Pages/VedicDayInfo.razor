@page "/vedic-day-info"

@using SwissEphNet

<PageTitle>Vedic Day Info</PageTitle>

<div class="container-fluid">
    <h3 class="text-center mb-4">Vedic Day Information</h3>
    <div class="card mb-4">
        <div class="card-header bg-primary text-white">
            <h5 class="mb-0">Today's Vedic Details</h5>
        </div>
        <div class="card-body">
            <table class="table table-bordered">
                <tbody>
                    <tr><th>Weekday</th><td>@Weekday</td></tr>
                    <tr><th>Vedic Month</th><td>@VedicMonth</td></tr>
                    <tr><th>Tithi</th><td>@Tithi</td></tr>
                    <tr><th>Hora (Current)</th><td>@Hora</td></tr>
                    <tr><th>Hora Start</th><td>@HoraStart</td></tr>
                    <tr><th>Hora End</th><td>@HoraEnd</td></tr>
                    <tr><th>Lagna (Ascendant)</th><td>@Lagna</td></tr>
                    <tr><th>Rahu Kaal</th><td>@RahuKaal</td></tr>
                    <tr><th>Yama Kaal</th><td>@YamaKaal</td></tr>
                </tbody>
            </table>
        </div>
    </div>
</div>

@code {
    // Location and time settings (can be parameterized)
    double longitude = 82.0061; // Amalapuram
    double latitude = 16.5786;
    double timezone = 5.5; // IST
    DateTime now;

    string Weekday = "";
    string VedicMonth = "";
    string Tithi = "";
    string Hora = "";
    string HoraStart = "";
    string HoraEnd = "";
    string Lagna = "";
    string RahuKaal = "";
    string YamaKaal = "";

    protected override void OnInitialized()
    {
        now = DateTime.UtcNow.AddHours(timezone);
        CalculateVedicDayInfo();
    }

    void CalculateVedicDayInfo()
    {
        // Weekday
        Weekday = now.DayOfWeek.ToString();

        // Vedic Month (simple version)
        var vedicMonths = new[] { "Chaitra", "Vaishakha", "Jyeshtha", "Ashadha", "Shravana", "Bhadrapada", "Ashwin", "Kartika", "Margashirsha", "Pausha", "Magha", "Phalguna" };
        VedicMonth = vedicMonths[(now.Month - 1) % 12];

        // Tithi calculation (approximate)
        var sweph = new SwissEph();
        double jut = now.Hour + (now.Minute / 60.0) + (now.Second / 3600.0);
        double jd = sweph.swe_julday(now.Year, now.Month, now.Day, jut, SwissEph.SE_GREG_CAL);
        double[] sun = new double[6];
        double[] moon = new double[6];
        string serr = "";
        sweph.swe_calc(jd, SwissEph.SE_SUN, SwissEph.SEFLG_SIDEREAL, sun, ref serr);
        sweph.swe_calc(jd, SwissEph.SE_MOON, SwissEph.SEFLG_SIDEREAL, moon, ref serr);
        double elong = (moon[0] - sun[0] + 360) % 360;
        int tithiNum = (int)(elong / 12.0) + 1;
        string[] tithiNames = { "Pratipada", "Dvitiya", "Tritiya", "Chaturthi", "Panchami", "Shashthi", "Saptami", "Ashtami", "Navami", "Dashami", "Ekadashi", "Dwadashi", "Trayodashi", "Chaturdashi", "Purnima/Amavasya" };
        Tithi = tithiNum <= 15 ? tithiNames[tithiNum - 1] : tithiNames[14];

        // Hora calculation (simple)
        string[] horaLords = { "Sun", "Venus", "Mercury", "Moon", "Saturn", "Jupiter", "Mars" };
        int sunriseHour = 6; // Assume 6 AM local sunrise
        int horaIndex = ((now.Hour - sunriseHour + 24) % 24);
        int horaLordIndex = horaIndex % 7;
        Hora = horaLords[horaLordIndex];
        DateTime horaStartTime = now.Date.AddHours(sunriseHour + horaIndex);
        DateTime horaEndTime = horaStartTime.AddHours(1);
        HoraStart = horaStartTime.ToString("HH:mm");
        HoraEnd = horaEndTime.ToString("HH:mm");

        // Lagna calculation (approximate)
        int lagnaIndex = ((now.Hour - sunriseHour + 24) % 12);
        string[] rasiNames = { "Mesh (Aries)", "Vrish (Taurus)", "Mithun (Gemini)", "Kark (Cancer)", "Simh (Leo)", "Kany (Virgo)", "Tula (Libra)", "Vrischik (Scorpio)", "Dhanu (Sagittarius)", "Makar (Capricorn)", "Kumbh (Aquarius)", "Meen (Pisces)" };
        Lagna = rasiNames[lagnaIndex];

        // Rahu Kaal & Yama Kaal (IST, simple)
        string[] rahuKaalTable = { "07:30-09:00", "15:00-16:30", "12:00-13:30", "13:30-15:00", "10:30-12:00", "09:00-10:30", "16:30-18:00" };
        string[] yamaKaalTable = { "06:00-07:30", "09:00-10:30", "10:30-12:00", "15:00-16:30", "16:30-18:00", "13:30-15:00", "12:00-13:30" };
        int weekdayIndex = (int)now.DayOfWeek;
        RahuKaal = rahuKaalTable[weekdayIndex];
        YamaKaal = yamaKaalTable[weekdayIndex];

        sweph.Dispose();
    }
}
